@model  IEnumerable<LibraryMVC4.Models.structure>


@{
    ViewBag.Title = "Library Pages";
    Layout = "~/Views/Shared/_adminTemplate.cshtml";

    //var grid = new WebGrid(Model, canPage: true, rowsPerPage: 30);
    var grid = new WebGrid(Model, canPage: false);
}
@Html.ActionLink("Go back to Library Admin", "index", "admin")
<div id="top"></div>
<h2>Library Pages Area</h2>

<div>Page Types: MM (main menu page), SW (link to specific page, e.g., GoogleScholar), DW (free-form text page), WL (page/set of weblinks on page), fa (pages organized by specific school, utilizes database master index in SQL Server)</div>
<br />
<div>
    ParentID: input corresponding ParentId to chain your pages. For example, the Find an Article page is a subpage under the Research Resources page. If no ParentId exists, then it is either an MM page
    or the page is an orphan and will not display on the Library site.
</div>
<br />
<div>LinkData: add corresponding reference. Can either be a link (SW), or corresponding Id from the DW or WL tables, etc. Note: MM pages do not have a LinkData reference.</div>

<div id="content">


    <div id="divmsg" style="color: red; font-weight:bold;"></div>

    <button id="add">Add New Page</button>@(" ") <button id="refresh">Refresh Grid</button>@(" ")

    <a href="#bottom" style="float: right; font-weight: bold;">Go to Bottom</a>

    <br />

    @grid.GetHtml(
                //htmlAttributes: new { id = grid },
                tableStyle: "webgrid-table",
                headerStyle: "webgrid-header",
                footerStyle: "webgrid-footer",
                alternatingRowStyle: "webgrid-alternating-row",
                rowStyle: "webgrid-row-style",
                columns: grid.Columns(
                    grid.Column(header: "Action",
                    format:
                    @<text>
                        <button class="edit-highId display-mode">Edit</button>
                        <button class="save-highId edit-mode">Update</button>
                        <button class="cancel-highId edit-mode">Cancel</button>
                        <button class="delete-highId edit-mode">Delete</button>
                    </text>),
                    grid.Column(columnName: "HighId", canSort: true,
                                format: @<text>
                        <span class="display-mode">@item.HighId</span>
                        <label id="HighId" class="edit-mode">@item.HighId</label>
                                </text>),
                    grid.Column(columnName: "Title", canSort: true,
                                format: @<text>
                        <span class="display-mode"><label id="lblTitle">@item.Title</label></span>
                        <input type="text" id="Title" value="@item.Title" class="edit-mode" />
                                </text>),
                    grid.Column(columnName: "PageType", canSort: true,
                                format: @<text>
                        <span class="display-mode"><label id="lblPageType">@item.PageType</label></span>
                        <input type="text" id="PageType" value="@item.PageType" class="edit-mode" />
                                </text>),
                    grid.Column(columnName: "ParentId", canSort: true,
                                format: @<text>
                        <span class="display-mode"><label id="lblParentId">@item.ParentId</label></span>
                        <input type="text" id="ParentId" value="@item.ParentId" class="edit-mode" />
                                </text>),
                    grid.Column(columnName: "DisplayOrder", canSort: false,
                                format: @<text>
                        <span class="display-mode"><label id="lblDisplayOrder">@item.DisplayOrder</label></span>
                        <input type="text" id="DisplayOrder" value="@item.DisplayOrder" class="edit-mode" />
                                </text>),
                    grid.Column(columnName: "LinkData", canSort: false,
                                format: @<text>
                        <span class="display-mode"><label id="lblLinkData">@item.LinkData</label></span>
                        <input type="text" id="LinkData" value="@item.LinkData" class="edit-mode" />
                                </text>))
                    )


    <div id="bottom"></div>
    <a href="#top" style="float: right; font-weight: bold;">Go to Top</a>

    <script type="text/javascript">

        $(function () {

            $('#add').on('click', function () {

                window.location.assign('/structure/addpage/')

            });
            $('#refresh').on('click', function () {

                window.location.reload();

            });
            $('.edit-mode').hide();
            $('.edit-highId, .cancel-highId').on('click', function () {
                var tr = $(this).parents('tr:first');
                tr.find('.edit-mode, .display-mode').toggle();
            });

            $('.save-highId').on('click', function () {

                var tr = $(this).parents('tr:first');
                var Title = tr.find("#Title").val();
                var PageType = tr.find("#PageType").val();
                var ParentId = tr.find("#ParentId").val();
                var LinkData = tr.find("#LinkData").val();
                var DisplayOrder = tr.find("#DisplayOrder").val();
                var HighId = tr.find("#HighId").html();
                tr.find("#libTitle").text(Title);
                tr.find("#lblPageType").text(PageType);
                tr.find("#lblParentId").text(ParentId);
                tr.find("#lblLinkData").text(LinkData);
                tr.find("#lblDisplayOrder").text(DisplayOrder);
                tr.find('.edit-mode, .display-mode').toggle();

                if (Title != '' && PageType != '') {

                    var LibraryPageModel =
                    {
                        "HighId": HighId,
                        "Title": Title,
                        "ParentId": ParentId,
                        "PageType": PageType,
                        "LinkData": LinkData,
                        "DisplayOrder": DisplayOrder
                    };
                    $.ajax({
                        url: '/structure/UpdateLibraryAdmin/',
                        data: JSON.stringify(LibraryPageModel),
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            alert(data);
                        }
                    });

                }

                else {

                    alert("Title and PageType cannot be null. Please try again.")

                }
            });
            $('.delete-highId').on('click', function () {
                var flag = confirm('Are you sure you want to delete?');

                if (flag) {

                    var tr = $(this).parents('tr:first');
                    var HighId = tr.find("#HighId").html();
                    tr.find('.edit-mode, .display-mode').toggle();
                    var LibraryDeleteItem =
                        {
                            "HighId": HighId
                        };
                    $.ajax({
                        url: '/structure/DeleteLibPage/',
                        data: JSON.stringify(LibraryDeleteItem),
                        type: 'Delete',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            alert(data);
                        }
                    });
                }
            });


        })

    </script>




</div>
